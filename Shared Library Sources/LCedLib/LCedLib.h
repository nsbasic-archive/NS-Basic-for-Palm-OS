#ifndef _LCEDLIB_H_#define _LCEDLIB_H_#include <LibTraps.h>#define LCedLibVersion_trapno	sysLibTrapCustom#define InetOpen_trapno		sysLibTrapCustom+1#define InetClose_trapno	sysLibTrapCustom+2#define InetRead_trapno		sysLibTrapCustom+3#define InetWrite_trapno	sysLibTrapCustom+4#define InetFlush_trapno	sysLibTrapCustom+5#ifdef COMPILING_SHLIB#define LCEDLIB_TRAP(trapno)#else#define LCEDLIB_TRAP(trapno)	SYS_TRAP(trapno)#endifErr LCedLibOpen(UInt16 refNum)	LCEDLIB_TRAP(sysLibTrapOpen);Err LCedLibClose(UInt16 refNum, UInt16 *numappsP)	LCEDLIB_TRAP(sysLibTrapClose);Int32 LCedLibVersion(UInt16 refNum, double *version)	LCEDLIB_TRAP(LCedLibVersion_trapno);Int32 InetOpen(UInt16 refNum, char *host, Int32 port, UInt32 timeout, Int32 *s)	LCEDLIB_TRAP(InetOpen_trapno);Int32 InetClose(UInt16 refNum, Int32 s)	LCEDLIB_TRAP(InetClose_trapno);Int32 InetRead(UInt16 refNum, Int32 s, Int32 len, char *set, UInt32 timeout, char *data)	LCEDLIB_TRAP(InetRead_trapno);Int32 InetWrite(UInt16 refNum, Int32 s, char *data, Int32 *len)	LCEDLIB_TRAP(InetWrite_trapno);Int32 InetFlush(UInt16 refNum, Int32 s)	LCEDLIB_TRAP(InetFlush_trapno);#endif /* _LCEDLIB_H_ */