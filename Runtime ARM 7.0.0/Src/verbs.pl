
my @verbs =
(
);

open OUTGLUE, ">PNOVerbGlue.c" or die;
open OUTGLUEH, ">PNOVerbGlue.h" or die;

print OUTGLUE "// Automatically generated by verbs.pl\n\n";
print OUTGLUEH "// Automatically generated by verbs.pl\n\n";

foreach my $verb (@verbs)
{
print OUTGLUE "
void Glue_$verb(PNOBlock *pnoP)
{
    char buf[1];
    void *p;
    unsigned short s;
    unsigned long l;
    Call68KFuncType *call68KFuncP;
    const void *emulStateP;
    
    call68KFuncP = (Call68KFuncType *) PNO(call68KFuncP);
    emulStateP = PNO(emulStateP);

    p = PNO($verb);
    p = (void *)ByteSwap32((long)p);

    SwapUserData(pnoP);
    l = ((call68KFuncP)(emulStateP, 
        (unsigned long) p, 
        buf,
        0));
    SwapUserData(pnoP);
}
";

print OUTGLUEH "void Glue_$verb(PNOBlock *pnoP);\n";

}

close OUTGLUEH;
close OUTGLUE;