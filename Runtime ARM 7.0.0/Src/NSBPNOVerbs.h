extern "C" void verb_startfor(PNOBlock *pnoP);
extern "C" void verb_continuefor(PNOBlock *pnoP);
extern "C" void verb_next(PNOBlock *pnoP);
extern "C" void verb_end_sub(PNOBlock *pnoP);
extern "C" void verb_setGeneralProperty(PNOBlock *pnoP);
extern "C" void verb_compute(PNOBlock *pnoP);
extern "C" void verb_special_arith_store(PNOBlock *pnoP);
extern "C" void verb_subtract(PNOBlock *pnoP);
extern "C" void verb_divide(PNOBlock *pnoP);
extern "C" void verb_multiply(PNOBlock *pnoP);
extern "C" void verb_add(PNOBlock *pnoP);
extern "C" void verb_initAVariableValue(PNOBlock *pnoP);
extern "C" void verb_sub(PNOBlock *pnoP);
extern "C" void verb_goto(PNOBlock *pnoP);
extern "C" void verb_function(PNOBlock *pnoP);
extern "C" void verb_preceedSubFunc(PNOBlock *pnoP);
extern "C" void verb_if(PNOBlock *pnoP);
extern "C" void verb_relat_logic_oper(PNOBlock *pnoP);
extern "C" void verb_func_getGeneralPropertyString(PNOBlock *pnoP);
extern "C" void verb_dowhile(PNOBlock *pnoP);
extern "C" void verb_loop(PNOBlock *pnoP);
extern "C" void verb_exitfor(PNOBlock *pnoP);
extern "C" void verb_exitdo(PNOBlock *pnoP);
extern "C" void verb_delay(PNOBlock *pnoP);
extern "C" void verb_concat_two_strings(PNOBlock *pnoP);
extern "C" void verb_call(PNOBlock *pnoP);
extern "C" void verb_negate(PNOBlock *pnoP);
extern "C" void verb_errmsg(PNOBlock *pnoP);
extern "C" void verb_getPen(PNOBlock *pnoP);
extern "C" void verb_generalVerb(PNOBlock *pnoP);
extern "C" void verb_not_logic_oper(PNOBlock *pnoP);
extern "C" void verb_seteventhandled(PNOBlock *pnoP);
extern "C" void verb_menudraw(PNOBlock *pnoP);
extern "C" void verb_alert(PNOBlock *pnoP);
extern "C" void verb_dbgetnorecs(PNOBlock *pnoP);
extern "C" void verb_dbposition(PNOBlock *pnoP);
extern "C" void verb_dbgetnew(PNOBlock *pnoP);
extern "C" void verb_dbread(PNOBlock *pnoP);
extern "C" void verb_dbreadnext(PNOBlock *pnoP);
extern "C" void verb_dbreadprev(PNOBlock *pnoP);
extern "C" void verb_dbdelete(PNOBlock *pnoP);
extern "C" void verb_dbinsert(PNOBlock *pnoP);
extern "C" void verb_drawchars(PNOBlock *pnoP);
extern "C" void verb_dountil(PNOBlock *pnoP);
extern "C" void verb_and(PNOBlock *pnoP);
extern "C" void verb_or(PNOBlock *pnoP);
extern "C" void verb_dbreset(PNOBlock *pnoP);
extern "C" void verb_dbopen(PNOBlock *pnoP);
extern "C" void verb_dbclose(PNOBlock *pnoP);
extern "C" void verb_dbcreate(PNOBlock *pnoP);
extern "C" void verb_dberase(PNOBlock *pnoP);
extern "C" void verb_dbfind(PNOBlock *pnoP);
extern "C" void verb_alert(PNOBlock *pnoP);
extern "C" void verb_drawline(PNOBlock *pnoP);
extern "C" void verb_createwindow(PNOBlock *pnoP);
extern "C" void verb_draw_bitmap(PNOBlock *pnoP);
extern "C" void verb_dbputnew(PNOBlock *pnoP);
extern "C" void verb_beep(PNOBlock *pnoP);
extern "C" void verb_gosub(PNOBlock *pnoP);
extern "C" void verb_return(PNOBlock *pnoP);
extern "C" void verb_popupclear(PNOBlock *pnoP);
extern "C" void verb_listadditem(PNOBlock *pnoP);
extern "C" void verb_stop(PNOBlock *pnoP);
extern "C" void verb_menuerase(PNOBlock *pnoP);
extern "C" void verb_menureset(PNOBlock *pnoP);
extern "C" void verb_do(PNOBlock *pnoP);
extern "C" void verb_controlsetstatus(PNOBlock *pnoP);
extern "C" void verb_controlhideorshow(PNOBlock *pnoP);
extern "C" void verb_fieldsettext(PNOBlock *pnoP);
extern "C" void verb_fieldsetmaxchars(PNOBlock *pnoP);
extern "C" void verb_controlsetstatusNew(PNOBlock *pnoP);
extern "C" void verb_controlsetlabel(PNOBlock *pnoP);
extern "C" void verb_listdeleteitem(PNOBlock *pnoP);
extern "C" void verb_listsetselected(PNOBlock *pnoP);
extern "C" void verb_setscrollbar(PNOBlock *pnoP);
extern "C" void verb_destroywindow(PNOBlock *pnoP);
extern "C" void verb_erasewindow(PNOBlock *pnoP);
extern "C" void verb_destroywindow(PNOBlock *pnoP);
extern "C" void verb_setcurwindow(PNOBlock *pnoP);
extern "C" void verb_listclear(PNOBlock *pnoP);
extern "C" void verb_exponentiation(PNOBlock *pnoP);

extern "C" void verb_clear_frac_dgts(PNOBlock *pnoP);
extern "C" void verb_nextscreen(PNOBlock *pnoP);
extern "C" void verb_logic_class_tests(PNOBlock *pnoP);
extern "C" void verb_nextscreenwithvariable(PNOBlock *pnoP);
extern "C" void verb_clearscreentextfields(PNOBlock *pnoP);
extern "C" void verb_cursor_id(PNOBlock *pnoP);
extern "C" void verb_redraw_id(PNOBlock *pnoP);
extern "C" void verb_func_getGeneralPropertyNumeric(PNOBlock *pnoP);
extern "C" void verb_cursor(PNOBlock *pnoP);
extern "C" void verb_end_logic_cond(PNOBlock *pnoP);
extern "C" void verb_start_new_parag(PNOBlock *pnoP);
extern "C" void verb_start_new_stmt(PNOBlock *pnoP);
extern "C" void verb_start_debug(PNOBlock *pnoP);
extern "C" void verb_end_debug(PNOBlock *pnoP);
extern "C" void verb_dbupdate(PNOBlock *pnoP);
extern "C" void verb_assign_bitmap(PNOBlock *pnoP);
extern "C" void verb_end_function(PNOBlock *pnoP);
extern "C" void verb_start_function(PNOBlock *pnoP);
extern "C" void verb_user_func(PNOBlock *pnoP);
extern "C" void verb_display(PNOBlock *pnoP);
